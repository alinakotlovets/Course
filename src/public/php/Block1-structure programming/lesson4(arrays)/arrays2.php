<?php

require 'echo.php';

$items = ['a' => 1, 'b' => 2, 'c' => 3, 'd' => 4, 'e' => 5, 'f' => 6];

eco(array_chunk($items, 2, true));
//розділює масиви на частини

/*'------------------------------------------------------------------------------------------------------------------'*/

$array1 = ['a', 'b', 'c'];
$array2 = [1, 2, 3];

eco(array_combine($array1, $array2));
// комбінує масиви

/*'------------------------------------------------------------------------------------------------------------------'*/

$array = [1, 2, 3, 4, 5, 6];

$filter = array_filter($array, fn($number) => $number % 2 === 0);

eco($filter);

$array = [1, null, '3', 0, [], 6];

$filter = array_filter($array);
$filter = array_values($filter);
eco($filter);

// фільтрує масиви

/*'------------------------------------------------------------------------------------------------------------------'*/

$items = ['a' => 5, 'b' => 10, 'c' => 5, 'd' => 15, 'e' => 10, 'f' => 6];

$keys = array_keys($items, '5');

eco($keys);

// шукає дані в масиві

/*'------------------------------------------------------------------------------------------------------------------'*/

$array = [1, 2, 3, 4, 5, 6];

$array = array_map(fn($number) => $number * 3, $array);

eco($array);

$items = [5, 10, 5];
$items2 = [15, 10, 6];

$array = array_map(fn($number1, $number2) => $number1 * $number2, $items, $items2);

eco($array);

// дії з деколькома масивами

/*'------------------------------------------------------------------------------------------------------------------'*/

$array1 = ['a' => 1, 'b' => 2, 'c' => 3];
$array2 = ['d' => 4, 'e' => 5, 'f' => 6];
$array3 = ['g' => 7, 'h' => 8, 'i' => 9];

$merge = array_merge($array1, $array2, $array3);

eco($merge);

// обєднання масивів

/*'------------------------------------------------------------------------------------------------------------------'*/

$invoiceItems = [
['price' => 9.99,  'qty' => 3, 'desc' => 'Item 1'],
['price' => 29.99, 'qty' => 1, 'desc' => 'Item 2'],
['price' => 149,   'qty' => 1, 'desc' => 'Item 3'],
['price' => 14.99, 'qty' => 2, 'desc' => 'Item 4'],
['price' => 4.99,  'qty' => 4, 'desc' => 'Item 5'],
];

$total = array_reduce($invoiceItems, fn($sum, $item) => $sum + $item['qty'] * $item['price']);

echo $total;

//розрахунки в масиві

/*'------------------------------------------------------------------------------------------------------------------'*/

$items = ['a', 'b', 'C', 'cdf', 'e', 'hgf', 'ggy'];

$key = array_search('ggy', $items);

echo '<br/>';
var_dump($key);

// пошук в масиві і показ порядкового номера елементу

/*'------------------------------------------------------------------------------------------------------------------'*/

$items = ['a' => 5, 'g' => 10, 'c' => 7, 'k' => 3, 'l' => 1, 'f' => 2];

asort($items);
echo '<br/>';
print_r($items);
//сортує по значеннях

ksort($items);
echo '<br/>';
print_r($items);
//сортує по ключах

usort($items, fn($a, $b) => $b <=> $a);
echo '<br/>';
print_r($items);

/*'------------------------------------------------------------------------------------------------------------------'*/

$array = [1, 2, 3, 4];

list($a, $b, $c, $d) = $array;

echo '<br/>' . $a . ',' . $b . ',' . $c . ',' . $d;
// присваює елементи масиву змінним

$arra = [1, 2, 3, 4];

list(2 => $a, 1 => $b, 3 => $c, 0 => $d) = $arra;

echo '<br/>' . $a . ',' . $b . ',' . $c . ',' . $d;